{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["DEFAULT_CASH","DEFAULT_CASHSET","BTN_LAYOUT","defaultState","price","totalShow","payment","priceShow","paymentShow","cid","status","change","rootReducer","combineReducers","state","action","type","slice","indexOf","concat","show","store","createStore","Display","console","log","this","props","id","className","name","onClick","addGoods","required","onChange","handlePayment","reset","calculate","map","item","key","toString","React","Component","CashSetting","handleInput","resetCid","Result","changeItem","priceText","paymentText","Presentational","unlockBtn","showHold","cidChangeNum","bind","e","itemPrice","document","getElementById","priceErrorText","test","value","textContent","length","setState","submitResetPrice","submitResetPriceShow","submitNewPrice","Number","submitNewPriceShow","submitRemoveTotalShow","submitRemovePaymentShow","submitRemoveStatus","submitRemoveChange","selectedDiv","btn","classList","remove","add","cashInput","querySelectorAll","i","submitNewCid","submitRemovePayment","priceInput","paymentInput","event","target","alert","submitNewPayment","submitNewPaymentShow","cashLeft","cashInputError","errorFlag","toFixed","cashSort","reduce","acc","cur","submitNewTotalShow","cash","cidBox","result","billPos","Math","round","remainder","amountCash","submitNewStatus","submitNewChange","sort","a","b","filter","submitRemoveCid","hundred","floor","push","twenty","ten","five","dollar","quarter","dime","nickel","penny","Container","connect","dispatch","addPrice","submitRemovePrice","removePrice","addPayment","addPriceShow","submitRemovePriceShow","removePriceShow","addPaymentShow","addCid","addStatus","addChange","AppWrapper","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c433fdff.chunk.js","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n\n//import rootReducer from 'redux/dist/redux';\n\nconst DEFAULT_CASH = [[\"ONE HUNDRED\", 100],[\"TWENTY\", 20],[\"TEN\", 10],[\"FIVE\", 5],[\"ONE\", 1],[\"QUARTER\", 0.25],[\"DIME\", 0.1],[\"NICKEL\", 0.05],[\"PENNY\", 0.01]];\n//const DEFAULT_CASHLEFT = [[\"ONE HUNDRED\", 0],[\"TWENTY\", 0],[\"TEN\", 0],[\"FIVE\", 0],[\"ONE\", 0],[\"QUARTER\", 0],[\"DIME\", 0],[\"NICKEL\", 0],[\"PENNY\", 0]];\nconst DEFAULT_CASHSET = [[\"ONE HUNDRED\", 0],[\"TWENTY\", 0],[\"TEN\", 0],[\"FIVE\", 0],[\"ONE\", 0],[\"QUARTER\", 0],[\"DIME\", 0],[\"NICKEL\", 0],[\"PENNY\", 0]];\n\nconst DISPLAY_LAYOUT = \"col-xs-12 col-md-6\";\nconst RESULT_LAYOUT = \"col-xs-12 col-md-6\";\nconst SETTING_LAYOUT = \"col-xs-12 col-md-12\";\nconst LIST_LAYOUT = \"col-xs-6 col-md-6\";\nconst SETTING_LIST_LAYOUT = \"col-xs-12 col-md-6\";\nconst BTN_LAYOUT = \"col-xs-10 col-xs-offset-1 col-md-6 col-md-offset-6 col-lg-4 col-lg-offset-4\"\nconst APP_LAYOUT = \"col-xs-10 col-xs-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\";\n\n\n//Redux\nconst defaultState = {\n  \n  price: [0],\n  totalShow: \"\",\n  payment: 0,\n  priceShow: [],\n  \n  paymentShow: \"\",\n  cid: [[\"ONE HUNDRED\", 0],[\"TWENTY\", 0],[\"TEN\", 0],[\"FIVE\", 0],[\"ONE\", 0],[\"QUARTER\", 0],[\"DIME\", 0],[\"NICKEL\", 0],[\"PENNY\", 0]],\n  status: \"\",\n  change: [[\"ONE HUNDRED\", 0],[\"TWENTY\", 0],[\"TEN\", 0],[\"FIVE\", 0],[\"ONE\", 0],[\"QUARTER\", 0],[\"DIME\", 0],[\"NICKEL\", 0],[\"PENNY\", 0]]\n};\nconst ADDPRICE = 'ADDPRICE';\nconst REMOVEPRICE = 'REMOVEPRICE';\nconst RESETPRICE = 'RESETPRICE';\n\nconst ADDTOTALSHOW = 'ADDTOTALSHOW';\nconst REMOVETOTALSHOW = 'REMOVETOTALSHOW';\n\nconst ADDPAYMENT = 'ADDPAYMENT';\nconst REMOVEPAYMENT = 'REMOVEPAYMENT';\n\nconst ADDPRICESHOW = 'ADDPRICESHOW';\nconst REMOVEPRICESHOW = 'REMOVEPRICESHOW';\nconst RESETPRICESHOW = 'RESETPRICESHOW';\n\nconst ADDPAYMENTSHOW = 'ADDPAYMENTSHOW';\nconst REMOVEPAYMENTSHOW = 'REMOVEPAYMENTSHOW';\n\nconst ADDCID = 'ADDCID';\nconst REMOVECID ='REMOVECID';\n\nconst ADDSTATUS = 'ADDSTATUS';\nconst REMOVESTATUS = 'REMOVESTATUS';\n\nconst ADDCHANGE = 'ADDCHANGE';\nconst REMOVECHANGE = 'REMOVECHANGE';\n\n//管理价格\nconst addPriceReducer = (state = defaultState.price, action) => {\n  switch (action.type) {\n    case ADDPRICE:\n      return [\n        ...state,\n        action.price\n      ];\n    case REMOVEPRICE:\n      return state.slice(0, state.indexOf(action.price))\n                  .concat(state.slice(state.indexOf(action.price) + 1));\n    case RESETPRICE:\n      return defaultState.price;\n    default: \n      return state;\n  }\n};\n\nconst addPrice = (price) =>{\n  return {\n    type: ADDPRICE,\n    price: price\n  };\n};\n\nconst removePrice = (price) => {\n  return {\n    type: REMOVEPRICE,\n    price: price\n  };\n};\nconst resetPrice = () => {\n  return {\n    type: RESETPRICE\n  };\n}\n\n//管理总价钱显示\nconst totalShowReducer = (state = {totalShow: defaultState.totalShow}, action) => {\n  switch (action.type) {\n    case ADDTOTALSHOW:\n      return {\n        totalShow: action.show\n      };\n    case REMOVETOTALSHOW:\n      return {totalShow: defaultState.totalShow};\n    default: \n      return state;\n  }\n};\n\nconst addTotalShow = (show) =>{\n  return {\n    type: ADDTOTALSHOW,\n    show: show\n  };\n};\n\nconst removeTotalShow = () => {\n  return {\n    type: REMOVETOTALSHOW\n  };\n};\n\n//管理顾客付款数据\nconst addPaymentReducer = (state = {payment: defaultState.payment}, action) => {\n  switch (action.type) {\n    case ADDPAYMENT:\n      return {\n        payment: action.payment\n      };\n    case REMOVEPAYMENT:\n      return {payment: defaultState.payment};\n    default: \n      return state;\n  }\n};\n\nconst addPayment = (payment) =>{\n  return {\n    type: ADDPAYMENT,\n    payment: payment\n  }\n};\n\nconst removePayment = () => {\n  return {\n    type: REMOVEPAYMENT\n  }\n};\n//管理价钱显示\nconst addPriceShowReducer = (state = defaultState.priceShow, action) => {\n  switch (action.type) {\n    case ADDPRICESHOW:\n      return [\n        ...state,\n        action.priceShow\n      ];\n    case REMOVEPRICESHOW:\n      return state.slice(0, state.indexOf(action.priceShow))\n                  .concat(state.slice(state.indexOf(action.priceShow) + 1));\n    case RESETPRICESHOW:\n      return defaultState.priceShow;\n    default: \n      return state;\n  }\n};\n\nconst addPriceShow = (priceShow) =>{\n  return {\n    type: ADDPRICESHOW,\n    priceShow: priceShow\n  };\n};\n\nconst removePriceShow = (priceShow) => {\n  return {\n    type: REMOVEPRICESHOW,\n    priceShow: priceShow\n  };\n};\n\nconst resetPriceShow = () => {\n  return {\n    type: RESETPRICESHOW\n  };\n}\n//管理付款显示\nconst addPaymentShowReducer = (state = {paymentShow: defaultState.paymentShow}, action) => {\n  switch (action.type) {\n    case ADDPAYMENTSHOW:\n      return {\n        paymentShow: action.paymentShow\n      };\n    case REMOVEPAYMENTSHOW:\n      return {paymentShow: defaultState.paymentShow};\n    default: \n      return state;\n  }\n};\n\nconst addPaymentShow = (paymentShow) =>{\n  return {\n    type: ADDPAYMENTSHOW,\n    paymentShow: paymentShow\n  }\n};\n\nconst removePaymentShow = () => {\n  return {\n    type: REMOVEPAYMENTSHOW\n  }\n};\n//管理收银柜现金\nconst addCidReducer = (state = defaultState.cid, action) => {\n  switch (action.type) {\n    case ADDCID:\n      return action.cid;\n    case REMOVECID:\n      return defaultState.cid;\n    default: \n      return state;\n  }\n};\n\nconst addCid = (cid) =>{\n  return {\n    type: ADDCID,\n    cid: cid\n  }\n};\n\nconst removeCid = () => {\n  return {\n    type: REMOVECID\n  }\n};\n//管理收银柜状态\nconst statusReducer = (state = {status: defaultState.status}, action) => {\n  switch (action.type) {\n    case ADDSTATUS:\n      return {\n        status: action.status\n      };\n    case REMOVESTATUS:\n      return {status: defaultState.status};\n    default: \n      return state;\n  }\n};\n\nconst addStatus = (status) =>{\n  return {\n    type: ADDSTATUS,\n    status: status\n  }\n};\n\nconst removeStatus = () => {\n  return {\n    type: REMOVESTATUS\n  }\n};\n//管理找零数据\nconst addChangeReducer = (state = defaultState.change, action) => {\n  switch (action.type) {\n    case ADDCHANGE:\n      return action.change;\n    case REMOVECHANGE:\n      return defaultState.change;\n    default: \n      return state;\n  }\n};\n\nconst addChange = (change) =>{\n  return {\n    type: ADDCHANGE,\n    change: change\n  }\n};\n\nconst removeChange = () => {\n  return {\n    type: REMOVECHANGE\n  }\n};\n\n//结合全部reducers\nconst rootReducer = combineReducers({\n  price: addPriceReducer,\n  totalShow: totalShowReducer,\n  payment: addPaymentReducer,\n  priceShow: addPriceShowReducer,\n  \n  paymentShow: addPaymentShowReducer,\n  cid: addCidReducer,\n  status: statusReducer,\n  change: addChangeReducer\n});\n//创建store\nconst store = createStore(rootReducer);\n\n\n//React\n\n//const Provider;\n//const connect;\n\n//收银机模拟器的输入显示\nclass Display extends React.Component {\n  /* constructor(props) {\n    super(props);\n  } */\n\n  render(){\n    /* const cidItem = this.props.cid.map(\n              (item) => \n              <li key={item[0].toString()}>\n                {item[1]}\n              </li>\n            ); */\n    \n    console.log(this.props.cid);\n    return (\n      <div id=\"information-input\" className={DISPLAY_LAYOUT}>\n        <h2 id=\"information\">Information</h2>\n        {/* <p id=\"cashErrorInfo\" className=\"hidden red-text\">Please add some cash!</p> */}\n        \n        <div>\n          <p>Price<strong id=\"price-error-text\" className=\"red-text\"></strong></p>\n          <input id=\"price\" type=\"text\" name=\"price\"></input>\n          <button id=\"add-item\" type=\"button\" onClick={this.props.addGoods}>Add</button>\n        </div>\n        <div>\n          <p>Payment<strong id=\"payment-error-text\" className=\"red-text\"></strong></p>\n          <input id=\"payment\" type=\"text\" name=\"payment\" required onChange={this.props.handlePayment}></input>\n        </div>\n        <p id=\"display-btn\">\n          <button id=\"reset\" className=\"btn btn-default\" type=\"button\" name=\"reset\" onClick={this.props.reset}>Reset</button>\n          <button id=\"calculateBtn\" className=\"btn btn-default\" type=\"button\" name=\"calculate\" onClick={this.props.calculate}>Calculate</button>\n        </p>\n        <h3>Cash in drawer:</h3>\n        <div id=\"display-input-list\" className=\"row\">\n          <ul id=\"cash-in-drawer\" className={LIST_LAYOUT}>\n            {DEFAULT_CASH.map(\n              (item) => \n              <li key={item[0].toString()}>\n                {item[0] + \": \"}\n              </li>\n            )}\n          </ul>\n          <ul id=\"cash-in-drawer-value\" className={LIST_LAYOUT}>\n            {this.props.cid.map(\n              (item) => \n              <li key={item[0].toString()}>\n                {item[1]}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n//收银机的柜台现金设置\nclass CashSetting extends React.Component {\n  render() {\n    \n    return(\n      \n      <div className={SETTING_LAYOUT}>\n        <p>\n          <button id=\"unlock\" className=\"btn btn-default btn-block\" type=\"button\" onClick={this.props.show}>Unlock Cash Setting</button>\n        </p>\n        \n        <div id=\"cash-setting-div\" className=\"hidden\">\n          <h2>Cash in drawer setting</h2>\n          <ul id=\"remainder\">\n            {DEFAULT_CASH.map((item) => \n              <li key={item[0].toString()} className=\"row\">\n                <p className={\"cash-left-name \" + SETTING_LIST_LAYOUT}>{item[0] + \": \"}<strong className=\"error-text red-text\"></strong></p>\n                <p className={SETTING_LIST_LAYOUT}>\n                  <input type=\"text\" id={item[1].toString()} className=\"cash-in-drawer-setting\"></input>\n                </p>\n              </li>\n            )}\n          </ul>\n          <div id=\"cash-setting-btn-wrapper\" className=\"row\">\n            <button id=\"cash-submit\" className={\"btn btn-default \"+ BTN_LAYOUT} type=\"button\" onClick={this.props.handleInput}>Submit</button>\n            <button id=\"cid-reset\" className={\"btn btn-default \" + BTN_LAYOUT} type=\"button\" onClick={this.props.resetCid}>Reset</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n//收银机的计算结果展示\nclass Result extends React.Component {\n  /* constructor(props) {\n    super(props);\n  } */\n\n  render() {\n    console.log(this.props.change);\n    const changeItem = this.props.change.map((item) => \n      <li key={item[0].toString()} className=\"row\">\n        <p className={LIST_LAYOUT}>{item[0] + \": \"}</p>\n        <p className={LIST_LAYOUT}>{item[1]}</p>\n      </li>\n    );\n    return (\n      <div id=\"result\" className={RESULT_LAYOUT}>\n        <h2>Result</h2>\n        \n        <h3>price: </h3>\n        <ul id=\"price-result-list\">\n            {this.props.priceText.map((item) =>\n              <li key={item.toString()}>\n                {item}\n              </li>\n            )}\n        </ul>\n        <h3>total: {this.props.totalShow}</h3>\n        <h3>payment: {this.props.paymentText}</h3>\n        <h3>Change due</h3>\n        <p><strong>{\"Status: \" + this.props.status}</strong></p>\n        <div id=\"result-list\">\n          \n          <ul  id=\"result-list-value\">{changeItem}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Presentational extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      unlockBtn: false,\n      /* price: [0],\n      totalShow: \"\",\n      payment: 0,\n      priceShow: [], */\n      showHold: true,\n      /* paymentShow: \"\",\n      cid: [[\"ONE HUNDRED\", 0],[\"TWENTY\", 0],[\"TEN\", 0],[\"FIVE\", 0],[\"ONE\", 0],[\"QUARTER\", 0],[\"DIME\", 0],[\"NICKEL\", 0],[\"PENNY\", 0]],\n      status: \"\",\n      change: DEFAULT_CASHSET */\n      cidChangeNum: 0\n    };\n\n    this.calculate = this.calculate.bind(this);\n    //this.handlePrice = this.handlePrice.bind(this);\n    this.handlePayment = this.handlePayment.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.reset = this.reset.bind(this);\n    this.show = this.show.bind(this);\n    this.addGoods = this.addGoods.bind(this);\n    this.resetCid = this.resetCid.bind(this);\n  }\n  //商品价格输入\n  addGoods(e) {\n    let itemPrice = document.getElementById(\"price\"); \n    let priceErrorText = document.getElementById(\"price-error-text\");\n    //检查价格输入是否正确的数值     \n    if(/[^0-9.]/.test(itemPrice.value) || /\\..+\\./.test(itemPrice.value) || /\\.{2,}/.test(itemPrice.value)) {\n      priceErrorText.textContent = \" Error!\";\n      itemPrice.value = \"\";\n      //检查价格输入的值的小数点后的位数，必须小于等于小数点后的货币的种类数，若大于则报错\n    }else if(itemPrice.value.slice(itemPrice.value.indexOf(\".\")).length > 3) {\n      priceErrorText.textContent = \" Error!\";\n      //如果价格输入的值为空，则默认输入为0\n    }else if(itemPrice.value === \"\"){\n      itemPrice.value = \"0\";\n      //通过以上所有检查，则再检查显示开关\n    }else {\n      priceErrorText.textContent = \"\";\n      //显示开关为关，说明已经进行过一轮计算，则打开显示开关，重置计算结果的显示，并更新价格数据\n      if (this.state.showHold === false){\n        this.setState({\n          showHold: true,\n          /* price: [Number(itemPrice.value)],\n          priceShow: [Number(itemPrice.value)],\n          totalShow: \"\",\n          paymentShow: \"\",\n          status: \"\",\n          change: DEFAULT_CASHSET */\n        });\n        this.props.submitResetPrice();\n        this.props.submitResetPriceShow();\n        this.props.submitNewPrice(Number(itemPrice.value));\n        this.props.submitNewPriceShow(Number(itemPrice.value));\n        this.props.submitRemoveTotalShow();\n        this.props.submitRemovePaymentShow();\n        this.props.submitRemoveStatus();\n        this.props.submitRemoveChange();\n        //若显示开关已经打开，则在原有数据上继续添加\n      }else {\n        /* this.setState({\n          price: this.state.price.concat(Number(itemPrice.value)),\n          priceShow: this.state.priceShow.concat(Number(itemPrice.value))\n        }); */\n        this.props.submitNewPrice(Number(itemPrice.value));\n        this.props.submitNewPriceShow(Number(itemPrice.value));\n      }\n    }\n    //完成价格数据处理后，清空输入，以便下一次处理\n    itemPrice.value = \"\";\n  }\n\n  //收银柜的现金设置开关\n  show(e){\n    let selectedDiv = document.getElementById(\"cash-setting-div\");\n    let btn = document.getElementById(\"unlock\");\n    if(this.state.unlockBtn === false){\n      selectedDiv.classList.remove(\"hidden\");\n      this.setState({\n        unlockBtn: true\n      });\n      btn.textContent = \"Lock Cash Setting\";\n    }else {\n      selectedDiv.classList.add(\"hidden\");\n      this.setState({\n        unlockBtn: false\n      });\n      btn.textContent = \"Unlock Cash Setting\";\n    }\n  }\n\n  //重置收银柜的现金设置\n  resetCid() {\n    let cashInput = document.querySelectorAll(\".cash-in-drawer-setting\");\n    for(let i=0; i < cashInput.length; i++){\n      cashInput[i].value = \"\"\n    }\n    this.props.submitNewCid(DEFAULT_CASHSET);\n    this.setState({\n      cidChangeNum: 0\n    });\n  }\n\n  //重置整个收银机的状态(除了收银柜现金之外)\n  reset(e){\n    \n    this.props.submitResetPrice();\n    this.props.submitRemoveTotalShow();\n    this.props.submitRemovePayment();\n    this.props.submitResetPriceShow();\n    this.props.submitRemovePaymentShow();\n    //this.props.submitNewCid(DEFAULT_CASHSET);\n    this.props.submitRemoveStatus();\n    this.props.submitRemoveChange();\n    let priceInput = document.getElementById(\"price\");\n    let paymentInput = document.getElementById(\"payment\");\n    priceInput.value = \"\";\n    paymentInput.value = \"\";\n    this.setState({\n      unlockBtn: false,\n      /* price: [0],\n      totalShow: \"\",\n      payment: 0,\n      priceShow: [], */\n      showHold: true\n      /* paymentShow: \"\",\n      cid: [[\"ONE HUNDRED\", 0],[\"TWENTY\", 0],[\"TEN\", 0],[\"FIVE\", 0],[\"ONE\", 0],[\"QUARTER\", 0],[\"DIME\", 0],[\"NICKEL\", 0],[\"PENNY\", 0]],\n      status: '',\n      change: DEFAULT_CASHSET */\n      \n    });\n    //console.log(this.state.cid);\n    //console.log(this.state.status);\n  }\n\n  /* handlePrice(event) {\n    //let priceInput = document.getElementById(\"price\");\n    //let paymentInput = document.getElementById(\"payment\");\n\n    if(/[^0-9.]/.test(event.target.value) || /\\..+\\./.test(event.target.value) || /\\.{2,}/.test(event.target.value)) {\n      alert(\"Erro! Please try again!\");\n      event.target.value = \"\";\n\n    }else if(event.target.value.slice(event.target.value.indexOf(\".\")).length > 3) {\n      alert(\"Erro! Please try again!\");\n\n    }else if(event.target.value === \"\"){\n      event.target.value = \"0\";\n    }else {\n      this.setState({\n        price: Number(event.target.value),\n        priceShow: Number(event.target.value)\n      });\n    }\n    \n  } */\n\n  //处理顾客的付款数据\n  handlePayment(event) {\n    //let priceInput = document.getElementById(\"price\");\n    //let paymentInput = document.getElementById(\"payment\");\n    //检查是否为正确数值，必须为数字和小数点的组合，且小数点不能连打，不能有多个小数点\n    if(/[^0-9.]/.test(event.target.value) || /\\..+\\./.test(event.target.value) || /\\.{2,}/.test(event.target.value)) {\n      alert(\"Erro! Please try again!\");\n      event.target.value = \"0\";\n      //检查小数点后的位数，必须小于等于小数点后的货币种类数，否则报错\n    }else if(event.target.value.slice(event.target.value.indexOf(\".\")).length > 3) {\n      alert(\"Erro! Please try again!\");\n      //若输入为空，则默认设置数值为0\n    }else if(event.target.value === \"\"){\n      event.target.value = \"0\"\n      //通过以上所有检查后，更新付款数据\n    }else {\n      /* this.setState({\n        payment: Number(event.target.value),\n        paymentShow: Number(event.target.value)\n      }); */\n      this.props.submitNewPayment(Number(event.target.value));\n      this.props.submitNewPaymentShow(Number(event.target.value));\n    }\n    \n  }\n\n  //处理收银柜的现金数据\n  handleInput() {\n    //创建一个变量存储处理数据\n    let cashLeft = this.props.cid;\n    let cashInput = document.querySelectorAll(\".cash-in-drawer-setting\");\n    let cashInputError = document.querySelectorAll(\".error-text\");\n    //用于检查数据错误\n    let errorFlag = 0;\n    //用循环检查所有现金设置的数据\n    for(let i=0; i < cashInput.length; i++){\n      //cashInputName[i].innerText = \"\";\n      //检查数值是否正确，必须为数字和小数点的组合，且小数点不可连打，不能有一个以上的小数点\n      if(/[^0-9.]/.test(cashInput[i].value) || /\\..+\\./.test(cashInput[i].value) || /\\.{2,}/.test(cashInput[i].value)) {\n        cashInputError[i].textContent = \" Error!\";\n        cashInput[i].value = \"\";\n        errorFlag++;\n        //检查小数点后的位数，必须小于等于小数点后的货币种类数，否则增加错误标识\n      }else if(cashInput[i].value.slice(cashInput[i].value.indexOf(\".\")).length > 3) {\n        cashInputError[i].textContent = \" Error!\";\n        errorFlag++;\n        //若输入为空，则默认设置为0\n      }else if(cashInput[i].value === \"\"){\n        cashInput[i].value = \"\";\n        //若通过以上所有的数据检查，则进入下一步检查\n      }else {\n        //console.log((Number(cashInput[i].value) * 100).toFixed(0));\n        //因为货币显示存在小数，故为方便处理；\n        //将数据放大100倍，又由于将文本转化为数值后为浮点数，故需取整\n        //然后再检查输入数据是否能被对应的货币单位整除\n        //若能被整除，则更新该数据到事先创建的变量中\n        if(((Number(cashInput[i].value) * 100).toFixed(0) % (DEFAULT_CASH[i][1] * 100)) === 0){\n          //console.log((Number(cashInput[i].value) * 100).toFixed(0) % (DEFAULT_CASH[i][1] * 100));\n          cashLeft[i][1] += (Number(cashInput[i].value) * 100).toFixed(0) / 100;\n          //console.log(\"hello\" + cashLeft[i][1]);\n          cashInputError[i].textContent = \"\";\n          //若不能被整除，则显示并记录错误\n        }else {\n          cashInput[i].value = \"\";\n          cashInputError[i].textContent = \" Error!\";\n          errorFlag++;\n        }\n      }\n    }\n    //用循环检查完数据后，再查看错误标识\n    //若错误标识为0，则说明数据全部通过检查，可以更新数据到状态中\n    //并清空输入\n    if(errorFlag === 0){\n       this.setState({\n        cidChangeNum: this.state.cidChangeNum + 1\n        //change: DEFAULT_CHANGE\n      }); \n      \n      this.props.submitNewCid(cashLeft);\n      for(let i=0; i < cashInput.length; i++){\n        cashInput[i].value = \"\"\n      }\n    }\n    //console.log(this.state.cid);\n    //console.log(this.state.change);\n    //console.log(cashLeft);\n    //console.log(this.props.cid);\n  }\n\n  //计算找零数据\n  calculate() {\n\n    if(this.state.showHold === true){\n      this.setState({\n        showHold: false\n      });\n    }\n\n    let change;\n\n    //备份库存现金\n    let cashSort = this.props.cid;\n    let price = this.props.price.reduce((acc, cur) => acc + cur);\n    console.log(this.props.price, price);\n    /* this.setState({\n      totalShow: price\n    }); */\n    this.props.submitNewTotalShow(price);\n\n    let cash = this.props.payment;\n    let cidBox = this.props.cid;\n    //console.log(cid);\n    console.log(price,cash);\n    //准备好结果模板\n    let result = {\n      status: '',\n      change: [[\"ONE HUNDRED\"],[\"TWENTY\"],[\"TEN\"],[\"FIVE\"],[\"ONE\"],[\"QUARTER\"],[\"DIME\"],[\"NICKEL\"],[\"PENNY\"]]\n    }\n    //把金钱面额与库存金额的数组位置相对应，方便记忆\n    let billPos = {\n      0.01: 0,\n      0.05: 1,\n      0.1: 2,\n      0.25: 3,\n      1: 4,\n      5: 5,\n      10: 6,\n      20: 7,\n      100: 8\n    }\n    //计算找零，为了方便计算余数，把找零放大100倍，后续相关计算的因子也全部等同的放大100倍\n    change = Math.round((cash - price) * 100);\n    console.log(change);\n    //用于保存每次计算一个面额的钞票数后，所仍需要的找零的金额\n    let remainder = 0;\n    //计算库存金额的总金额\n    let amountCash = cidBox[billPos[0.01]][1] + cidBox[billPos[0.05]][1] + cidBox[billPos[0.1]][1] + cidBox[billPos[0.25]][1] + cidBox[billPos[1]][1] + cidBox[billPos[5]][1] + cidBox[billPos[10]][1] + cidBox[billPos[20]][1] + cidBox[billPos[100]][1];\n    amountCash *= 100;\n    //console.log(amountCash);\n\n    \n      if (amountCash < change){\n        //库存总金额少于应当找零的金额\n        result.status = \"INSUFFICIENT_FUNDS\";\n        result.change = [];\n        \n        /* this.setState({\n          status: result.status,\n          change: result.change\n        }); */\n        this.props.submitNewStatus(result.status);\n        this.props.submitNewChange(result.change);\n      }else if (amountCash === change){\n        //库存总金额正好等于应当找零的金额\n        result.status = \"CLOSED\";\n        //把库存金额由高到低排序后返回\n        result.change = cashSort.sort((a, b) => -(a - b));\n        result.change = result.change.filter((item) => item[1] !== 0);\n        /* this.setState({\n          status: result.status,\n          change: result.change,\n          cid: [[\"ONE HUNDRED\", 0],[\"TWENTY\", 0],[\"TEN\", 0],[\"FIVE\", 0],[\"ONE\", 0],[\"QUARTER\", 0],[\"DIME\", 0],[\"NICKEL\", 0],[\"PENNY\", 0]]\n        }); */\n        this.props.submitNewStatus(result.status);\n        this.props.submitNewChange(result.change);\n        this.props.submitRemoveCid();\n        this.setState({\n          cidChangeNum: this.state.cidChangeNum + 1\n        });\n      }else {\n        //库存总金额大于应当找零的金额\n        let hundred = Math.floor(change / 10000);\n        if (hundred * 100 > cidBox[8 - billPos[100]][1]){\n          //库存的百元面额钞票总金额不足以找零\n          //则找零剩余的金额应当等于，当前应找零金额 - 库存百元面额钞票总金额；因为为了便于计算，找零放大了100倍，所以此处库存金额也放大相同倍数\n          remainder = change - cidBox[billPos[100]][1] * 100;\n          //应找零金额直接包含库存的所有百元面额钞票\n          result.change[8 - billPos[100]].push(cidBox[billPos[100]][1]);\n          //更新库存\n          cidBox[8 - billPos[100]][1] = 0;\n          \n        }else {\n          //库存的百元面额钞票比当前应当找零金额的百位及以上数多\n          //则找零的剩余金额应当为，当前应找零金额，对库存百元钞票求余数\n          remainder = change % 10000;\n          //找零应包含的百元面额的钞票数为，当前应找零金额除以100的商；该商为当前面额的钱币数量，再乘以对应面额，则是，该面额的钱币用于找零的金额\n          result.change[8 - billPos[100]].push(hundred * 100);\n          //更新库存\n          cidBox[8 - billPos[100]][1] -= hundred * 100;\n          \n        }\n        \n        let twenty = Math.floor(remainder / 2000);\n        if (twenty * 20 > cidBox[8 - billPos[20]][1]){\n          remainder -= cidBox[billPos[20]][1] * 100;\n          result.change[8 - billPos[20]].push(cidBox[billPos[20]][1]);\n\n          //更新库存\n          cidBox[8 - billPos[20]][1] = 0;\n        }else {\n          remainder = change % 10000 % 2000;\n          result.change[8 - billPos[20]].push(twenty * 20);\n          //更新库存\n          cidBox[8 - billPos[20]][1] -= twenty * 20;\n        }\n\n        let ten = Math.floor(remainder / 1000);\n        if (ten * 20 > cidBox[8 - billPos[10]][1]){\n          remainder -= cidBox[billPos[10]][1] * 100;\n          result.change[8 - billPos[10]].push(cidBox[billPos[10]][1]);\n          //更新库存\n          cidBox[8 - billPos[10]][1] = 0;\n        }else {\n          remainder = change % 10000 % 2000 % 1000;\n          result.change[8 - billPos[10]].push(ten * 10);\n          //更新库存\n          cidBox[8 - billPos[10]][1] -= ten * 10;\n        }\n        //console.log(ten, remainder);\n        let five = Math.floor(remainder  / 500);\n        if (five * 5 > cidBox[8 - billPos[5]][1]){\n          remainder -= cidBox[billPos[5]][1] * 100;\n          result.change[8 - billPos[5]].push(cidBox[billPos[5]][1]);\n          //更新库存\n          cidBox[8 - billPos[5]][1] = 0;\n        }else {\n          remainder = change % 10000 % 2000 % 1000 % 500;\n          result.change[8 - billPos[5]].push(five * 5);\n          //更新库存\n          cidBox[8 - billPos[5]][1] -= five * 5;\n        }\n        \n        let dollar = Math.floor(remainder / 100);\n        if (dollar * 1 > cidBox[8 - billPos[1]][1]){\n          remainder -= cidBox[billPos[1]][1] * 100;\n          result.change[8 - billPos[1]].push(cidBox[billPos[1]][1]);\n          //更新库存\n          cidBox[8 - billPos[1]][1] = 0;\n        }else {\n          remainder = change % 10000 % 2000 % 1000 % 500 % 100;\n          result.change[8 - billPos[1]].push(dollar * 1);\n          //更新库存\n          cidBox[8 - billPos[1]][1] -= dollar * 1;\n        }\n        \n        let quarter = Math.floor(remainder / 25);\n        if (quarter * 0.25 > cidBox[8 - billPos[0.25]][1]){\n          remainder -= cidBox[billPos[0.25]][1] * 100;\n          result.change[8 - billPos[0.25]].push(cidBox[billPos[0.25]][1]);\n          //更新库存\n          cidBox[8 - billPos[0.25]][1] = 0;\n        }else {\n          remainder = change % 10000 % 2000 % 1000 % 500 % 100 % 25;\n          result.change[8 - billPos[0.25]].push(quarter * 0.25);\n          //更新库存\n          cidBox[8 - billPos[0.25]][1] -= quarter * 0.25;\n        }\n        \n        let dime = Math.floor(remainder / 10);\n        if (dime * 0.1 > cidBox[8 - billPos[0.1]][1]){\n          remainder -= cidBox[billPos[0.1]][1] * 100;\n          result.change[8 - billPos[0.1]].push(cidBox[billPos[0.1]][1]);\n          //更新库存\n          cidBox[8 - billPos[0.1]][1] =0;\n        }else {\n          remainder = change % 10000 % 2000 % 1000 % 500 % 100 % 25 % 10;\n          result.change[8 - billPos[0.1]].push(dime * 0.1);\n          //更新库存\n          cidBox[8 - billPos[0.1]][1] -= dime * 0.1;\n        }\n        \n        let nickel = Math.floor(remainder / 5);\n        if (nickel * 0.05 > cidBox[8 - billPos[0.05]][1]){\n          remainder -= cidBox[billPos[0.05]][1] * 100;\n          result.change[8 - billPos[0.05]].push(cidBox[billPos[0.05]][1]);\n          //更新库存\n          cidBox[8 - billPos[0.05]][1] = 0;\n        }else {\n          remainder = change % 10000 % 2000 % 1000 % 500 % 100 % 25 % 10 % 5;\n          result.change[8 - billPos[0.05]].push(nickel * 0.05);\n          \n          //更新库存\n          cidBox[8 - billPos[0.05]][1] -= nickel * 0.05;\n        }\n\n        let penny = Math.floor(remainder / 1);\n        if (penny * 0.01 > cidBox[8 - billPos[0.01]][1]){\n          //这是最小面额的金钱，如果计算得出的应当找零的金额，比库存还要大\n          //则说明两种情况，一是，库存金额小于找零金额，但这个情况前面已经处理\n          //二是，前面都把剩余的找零金额堆积到了此处，前面所有面额的钱币库存都不能找零，此处最小面额的钱币也还是不足以找零，即，库存的钱币无法准确找零\n          //例如，库存只有1 + 0.01，而需找零0.5\n          result.change = [];\n          result.status = \"INSUFFICIENT_FUNDS\"\n          cidBox = this.props.cid;\n          //更新找零的计算结果\n          /* this.setState({\n            status: result.status,\n            change: result.change\n          }); */\n          this.props.submitNewStatus(result.status);\n          this.props.submitNewChange(result.change);\n        }else {\n          result.change[8 - billPos[0.01]].push(penny * 0.01);\n          //更新库存\n          cidBox[8 - billPos[0.01]][1] -= penny * 0.01;\n\n          result.change = result.change.filter((item) => item[1] !== 0);\n          \n          result.status = \"OPEN\";\n          \n          /* this.setState({\n            status: result.status,\n            change: result.change,\n            cid: cidBox\n          }); */\n          this.props.submitNewStatus(result.status);\n          this.props.submitNewChange(result.change);\n          this.props.submitNewCid(cidBox);\n          this.setState({\n            cidChangeNum: this.state.cidChangeNum + 1\n          })\n        }\n        \n        \n      }\n      console.log(result);\n      //完成一次计算后，初始化数据\n      let priceInput = document.getElementById(\"price\");\n      let paymentInput = document.getElementById(\"payment\");\n      priceInput.value = \"0\";\n      paymentInput.value = \"0\";\n      /* this.setState({\n        price: [0],\n        payment: 0\n      }); */\n      this.props.submitResetPrice();\n      this.props.submitRemovePayment();\n  }\n\n  render() {\n    return(\n      <div className=\"row\">\n        <div className={APP_LAYOUT}>\n          <Display price={this.props.price} payment={this.props.payment} cid={this.props.cid} addGoods={this.addGoods} handlePayment={this.handlePayment} calculate={this.calculate} reset={this.reset} />\n          <Result change={this.props.change} status={this.props.status} priceText={this.props.priceShow} paymentText={this.props.paymentShow} totalShow={this.props.totalShow}/>\n          <CashSetting handleInput={this.handleInput} show={this.show} resetCid={this.resetCid}/>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    \n    price: state.price,\n    totalShow: state.totalShow.totalShow,\n    payment: state.payment.payment,\n    priceShow: state.priceShow,\n\n    paymentShow: state.paymentShow.paymentShow,\n    cid: state.cid,\n    status: state.status.status,\n    change: state.change\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitNewPrice: (price) => {\n      dispatch(addPrice(price))\n    },\n    submitRemovePrice: (price) => {\n      dispatch(removePrice(price))\n    },\n    submitResetPrice: () => {\n      dispatch(resetPrice())\n    },\n    submitNewTotalShow: (totalShow) => {\n      dispatch(addTotalShow(totalShow))\n    },\n    submitRemoveTotalShow: () => {\n      dispatch(removeTotalShow())\n    },\n    submitNewPayment: (payment) => {\n      dispatch(addPayment(payment))\n    },\n    submitRemovePayment: () => {\n      dispatch(removePayment())\n    },\n    submitNewPriceShow: (priceShow) => {\n      dispatch(addPriceShow(priceShow))\n    },\n    submitRemovePriceShow: (priceShow) => {\n      dispatch(removePriceShow(priceShow))\n    },\n    submitResetPriceShow: () => {\n      dispatch(resetPriceShow())\n    },\n    submitNewPaymentShow: (paymentShow) => {\n      dispatch(addPaymentShow(paymentShow))\n    },\n    submitRemovePaymentShow: () => {\n      dispatch(removePaymentShow())\n    },\n    submitNewCid: (cid) => {\n      dispatch(addCid(cid))\n    },\n    submitRemoveCid: () => {\n      dispatch(removeCid())\n    },\n    submitNewStatus: (status) => {\n      dispatch(addStatus(status))\n    },\n    submitRemoveStatus: () => {\n      dispatch(removeStatus())\n    },\n    submitNewChange: (change) => {\n      dispatch(addChange(change))\n    },\n    submitRemoveChange: () => {\n      dispatch(removeChange())\n    }\n  }\n};\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Presentational);\n\nclass AppWrapper extends React.Component {\n  render() {\n    return (\n      <Provider store={store} >\n        <Container />\n      </Provider>\n    );\n  };\n}\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} */\n\nexport default AppWrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<AppWrapper />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}